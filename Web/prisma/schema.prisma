generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  age        Int
  sex        String    // Use "Male", "Female", or "Other"
  createdAt  DateTime  @default(now())

  healthMetrics      HealthMetric[]
  userFeedbacks       UserFeedback[]
dietRecommendations DietRecommendation[]
}

model HealthMetric {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  age        Int
  sex        String   // "Male" or "Female"
  cp         Int      // Chest pain type (0-3)
  trestbps   Int      // Resting blood pressure
  chol       Int      // Cholesterol level
  fbs        Boolean  // Fasting blood sugar (>120 mg/dL)
  restecg    Int      // Resting ECG results (0-2)
  thalach    Int      // Maximum heart rate achieved
  exang      Boolean  // Exercise-induced angina
  oldpeak    Float    // ST depression
  slope      Int      // Slope of the peak exercise ST segment (0-2)
  ca         Int      // Number of major vessels (0-4)
  thal       Int      // Thalassemia type (0-3)
  prediction Int      // Predicted heart disease probability
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  dietRecommendations DietRecommendation[]
}

model DietRecommendation {
  id             Int       @id @default(autoincrement())
  userId         Int
  healthMetricId Int
  user           User      @relation(fields: [userId], references: [id])
  healthMetric   HealthMetric @relation(fields: [healthMetricId], references: [id])
  dietPlan       String
  generatedAt    DateTime  @default(now())
  aiFeedback     String?

  userFeedbacks  UserFeedback[]
}

model UserFeedback {
  id               Int       @id @default(autoincrement())
  recommendationId Int
  userId           Int
  user             User      @relation(fields: [userId], references: [id])
  feedback         String
  rating           Int       @default(1)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  recommendation   DietRecommendation @relation(fields: [recommendationId], references: [id])
}